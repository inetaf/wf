// Code generated by "stringer -output=zmatchtype_strings.go -type=MatchType -trimprefix=MatchType"; DO NOT EDIT.

package wf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MatchEqual-0]
	_ = x[MatchGreater-1]
	_ = x[MatchLess-2]
	_ = x[MatchGreaterOrEqual-3]
	_ = x[MatchLessOrEqual-4]
	_ = x[MatchRange-5]
	_ = x[MatchFlagsAllSet-6]
	_ = x[MatchFlagsAnySet-7]
	_ = x[MatchFlagsNoneSet-8]
	_ = x[MatchEqualCaseInsensitive-9]
	_ = x[MatchNotEqual-10]
	_ = x[MatchPrefix-11]
	_ = x[MatchNotPrefix-12]
}

const _MatchType_name = "MatchEqualMatchGreaterMatchLessMatchGreaterOrEqualMatchLessOrEqualMatchRangeMatchFlagsAllSetMatchFlagsAnySetMatchFlagsNoneSetMatchEqualCaseInsensitiveMatchNotEqualMatchPrefixMatchNotPrefix"

var _MatchType_index = [...]uint8{0, 10, 22, 31, 50, 66, 76, 92, 108, 125, 150, 163, 174, 188}

func (i MatchType) String() string {
	if i >= MatchType(len(_MatchType_index)-1) {
		return "MatchType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MatchType_name[_MatchType_index[i]:_MatchType_index[i+1]]
}
