// Code generated by "stringer -output=zmatchtype_strings.go -type=matchType -trimprefix=matchType"; DO NOT EDIT.

package wf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[matchEqual-0]
	_ = x[matchGreater-1]
	_ = x[matchLess-2]
	_ = x[matchGreaterOrEqual-3]
	_ = x[matchLessOrEqual-4]
	_ = x[matchRange-5]
	_ = x[matchFlagsAllSet-6]
	_ = x[matchFlagsAnySet-7]
	_ = x[matchFlagsNoneSet-8]
	_ = x[matchEqualCaseInsensitive-9]
	_ = x[matchNotEqual-10]
	_ = x[matchPrefix-11]
	_ = x[matchNotPrefix-12]
}

const _matchType_name = "matchEqualmatchGreatermatchLessmatchGreaterOrEqualmatchLessOrEqualmatchRangematchFlagsAllSetmatchFlagsAnySetmatchFlagsNoneSetmatchEqualCaseInsensitivematchNotEqualmatchPrefixmatchNotPrefix"

var _matchType_index = [...]uint8{0, 10, 22, 31, 50, 66, 76, 92, 108, 125, 150, 163, 174, 188}

func (i matchType) String() string {
	if i >= matchType(len(_matchType_index)-1) {
		return "matchType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _matchType_name[_matchType_index[i]:_matchType_index[i+1]]
}
